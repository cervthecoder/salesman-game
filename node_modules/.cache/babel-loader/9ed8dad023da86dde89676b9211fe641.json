{"ast":null,"code":"var _jsxFileName = \"/home/matejcmatej/salesman/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, ZAxis, ResponsiveContainer } from 'recharts';\nimport { MapPin, Clock, Route, Shuffle, PinIcon } from 'lucide-react';\nimport './App.css';\n\n// Constants and helper functions\nconst NUM_CITIES = 15;\nconst CHART_SIZE = 600;\nconst MIN_DISTANCE = 15;\nconst CHART_PADDING = 10;\nconst CITY_NAMES = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio', 'San Diego', 'Dallas', 'San Jose', 'Austin', 'Jacksonville', 'Fort Worth', 'Columbus', 'San Francisco'];\nconst FIXED_CITIES = [{\n  id: 0,\n  name: 'New York',\n  x: 80,\n  y: 20\n}, {\n  id: 1,\n  name: 'Los Angeles',\n  x: 20,\n  y: 80\n}, {\n  id: 2,\n  name: 'Chicago',\n  x: 60,\n  y: 40\n}, {\n  id: 3,\n  name: 'Houston',\n  x: 40,\n  y: 70\n}, {\n  id: 4,\n  name: 'Phoenix',\n  x: 30,\n  y: 50\n}, {\n  id: 5,\n  name: 'Philadelphia',\n  x: 75,\n  y: 30\n}, {\n  id: 6,\n  name: 'San Antonio',\n  x: 35,\n  y: 60\n}, {\n  id: 7,\n  name: 'San Diego',\n  x: 25,\n  y: 75\n}, {\n  id: 8,\n  name: 'Dallas',\n  x: 45,\n  y: 55\n}, {\n  id: 9,\n  name: 'San Jose',\n  x: 15,\n  y: 85\n}, {\n  id: 10,\n  name: 'Austin',\n  x: 50,\n  y: 65\n}, {\n  id: 11,\n  name: 'Jacksonville',\n  x: 70,\n  y: 25\n}, {\n  id: 12,\n  name: 'Fort Worth',\n  x: 55,\n  y: 45\n}, {\n  id: 13,\n  name: 'Columbus',\n  x: 65,\n  y: 35\n}, {\n  id: 14,\n  name: 'San Francisco',\n  x: 10,\n  y: 90\n}];\nconst calculateDistance = (city1, city2) => {\n  const dx = city1.x - city2.x;\n  const dy = city1.y - city2.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\nconst generateRandomCities = numCities => {\n  const cities = [];\n  for (let i = 0; i < numCities; i++) {\n    let newCity;\n    let tooClose;\n    do {\n      tooClose = false;\n      newCity = {\n        id: i,\n        name: CITY_NAMES[i],\n        x: Math.random() * (100 - 2 * CHART_PADDING) + CHART_PADDING,\n        y: Math.random() * (100 - 2 * CHART_PADDING) + CHART_PADDING\n      };\n      for (let j = 0; j < cities.length; j++) {\n        if (calculateDistance(newCity, cities[j]) < MIN_DISTANCE) {\n          tooClose = true;\n          break;\n        }\n      }\n    } while (tooClose);\n    cities.push(newCity);\n  }\n  return cities;\n};\nconst TravelingSalesmanGame = () => {\n  const [cities, setCities] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [totalDistance, setTotalDistance] = useState(0);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(true);\n  useEffect(() => {\n    resetGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRandomMode]);\n  const handleCityClick = city => {\n    if (gameFinished) return;\n    if (route.includes(city)) {\n      alert(\"You've already visited this city!\");\n      return;\n    }\n    if (route.length === 0) {\n      setStartTime(Date.now());\n    }\n    const newRoute = [...route, city];\n    setRoute(newRoute);\n    if (newRoute.length > 1) {\n      const distance = calculateDistance(newRoute[newRoute.length - 2], city);\n      setTotalDistance(prevDistance => prevDistance + distance);\n    }\n    if (newRoute.length === cities.length) {\n      const finalDistance = calculateDistance(city, newRoute[0]);\n      setTotalDistance(prevDistance => prevDistance + finalDistance);\n      setEndTime(Date.now());\n      setGameFinished(true);\n    }\n  };\n  const resetGame = () => {\n    setCities(isRandomMode ? generateRandomCities(NUM_CITIES) : FIXED_CITIES);\n    setRoute([]);\n    setTotalDistance(0);\n    setGameFinished(false);\n    setStartTime(null);\n    setEndTime(null);\n  };\n  const toggleMode = () => {\n    setIsRandomMode(!isRandomMode);\n  };\n  const routeData = route.map((city, index) => ({\n    ...city,\n    index: index + 1\n  }));\n  const renderCityPoint = props => {\n    const {\n      cx,\n      cy,\n      payload\n    } = props;\n    const isVisited = route.includes(payload);\n    return /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      cx: cx,\n      cy: cy,\n      r: isVisited ? 8 : 6,\n      fill: isVisited ? '#10B981' : '#6366F1',\n      className: \"city-point\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleCityClick(payload),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      x: cx,\n      y: cy - 10,\n      textAnchor: \"middle\",\n      fontSize: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, payload.name));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, `\n          .city-point {\n            transition: r 0.3s ease, fill 0.3s ease;\n          }\n          .city-point:hover {\n            r: 10;\n          }\n        `), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, \"Traveling Salesman Game\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"Visit all \", NUM_CITIES, \" cities once and return to the start with the shortest possible route!\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleMode,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, isRandomMode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Shuffle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }), \" Switch to Fixed Mode\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PinIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), \" Switch to Random Mode\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    style: {\n      maxWidth: `${CHART_SIZE}px`,\n      height: `${CHART_SIZE}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(ScatterChart, {\n    margin: {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    type: \"number\",\n    dataKey: \"x\",\n    domain: [0, 100],\n    tick: false,\n    axisLine: {\n      stroke: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"number\",\n    dataKey: \"y\",\n    domain: [0, 100],\n    tick: false,\n    axisLine: {\n      stroke: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ZAxis, {\n    type: \"number\",\n    range: [100, 1000],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Scatter, {\n    name: \"Cities\",\n    data: cities,\n    fill: \"#6366F1\",\n    shape: renderCityPoint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Scatter, {\n    name: \"Route\",\n    data: routeData,\n    fill: \"#10B981\",\n    line: {\n      stroke: '#10B981',\n      strokeWidth: 2\n    },\n    shape: \"star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, \"Game Stats\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }), \" Total Distance: \", totalDistance.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MapPin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), \" Cities Visited: \", route.length, \" / \", NUM_CITIES), startTime && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }), \" Time Elapsed:\", ' ', (((endTime || Date.now()) - startTime) / 1000).toFixed(2), \"s\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, \"Current Route:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, route.map(city => city.name).join(' → '))))), gameFinished && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-finished\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, \"You Finished!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"Final Distance: \", totalDistance.toFixed(2)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, \"Total Time: \", ((endTime - startTime) / 1000).toFixed(2), \" seconds\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetGame,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, \"Play Again\")));\n};\nexport default TravelingSalesmanGame;","map":{"version":3,"names":["React","useState","useEffect","ScatterChart","Scatter","XAxis","YAxis","ZAxis","ResponsiveContainer","MapPin","Clock","Route","Shuffle","PinIcon","NUM_CITIES","CHART_SIZE","MIN_DISTANCE","CHART_PADDING","CITY_NAMES","FIXED_CITIES","id","name","x","y","calculateDistance","city1","city2","dx","dy","Math","sqrt","generateRandomCities","numCities","cities","i","newCity","tooClose","random","j","length","push","TravelingSalesmanGame","setCities","route","setRoute","totalDistance","setTotalDistance","gameFinished","setGameFinished","startTime","setStartTime","endTime","setEndTime","isRandomMode","setIsRandomMode","resetGame","handleCityClick","city","includes","alert","Date","now","newRoute","distance","prevDistance","finalDistance","toggleMode","routeData","map","index","renderCityPoint","props","cx","cy","payload","isVisited","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","r","fill","className","style","cursor","onClick","textAnchor","fontSize","Fragment","maxWidth","height","width","margin","top","right","bottom","left","type","dataKey","domain","tick","axisLine","stroke","range","data","shape","line","strokeWidth","toFixed","join"],"sources":["/home/matejcmatej/salesman/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  ZAxis,\n  ResponsiveContainer,\n} from 'recharts';\nimport { MapPin, Clock, Route, Shuffle, PinIcon } from 'lucide-react';\nimport './App.css';\n\n// Constants and helper functions\nconst NUM_CITIES = 15;\nconst CHART_SIZE = 600;\nconst MIN_DISTANCE = 15;\nconst CHART_PADDING = 10;\nconst CITY_NAMES = [\n  'New York',\n  'Los Angeles',\n  'Chicago',\n  'Houston',\n  'Phoenix',\n  'Philadelphia',\n  'San Antonio',\n  'San Diego',\n  'Dallas',\n  'San Jose',\n  'Austin',\n  'Jacksonville',\n  'Fort Worth',\n  'Columbus',\n  'San Francisco',\n];\n\nconst FIXED_CITIES = [\n  { id: 0, name: 'New York', x: 80, y: 20 },\n  { id: 1, name: 'Los Angeles', x: 20, y: 80 },\n  { id: 2, name: 'Chicago', x: 60, y: 40 },\n  { id: 3, name: 'Houston', x: 40, y: 70 },\n  { id: 4, name: 'Phoenix', x: 30, y: 50 },\n  { id: 5, name: 'Philadelphia', x: 75, y: 30 },\n  { id: 6, name: 'San Antonio', x: 35, y: 60 },\n  { id: 7, name: 'San Diego', x: 25, y: 75 },\n  { id: 8, name: 'Dallas', x: 45, y: 55 },\n  { id: 9, name: 'San Jose', x: 15, y: 85 },\n  { id: 10, name: 'Austin', x: 50, y: 65 },\n  { id: 11, name: 'Jacksonville', x: 70, y: 25 },\n  { id: 12, name: 'Fort Worth', x: 55, y: 45 },\n  { id: 13, name: 'Columbus', x: 65, y: 35 },\n  { id: 14, name: 'San Francisco', x: 10, y: 90 },\n];\n\nconst calculateDistance = (city1, city2) => {\n  const dx = city1.x - city2.x;\n  const dy = city1.y - city2.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nconst generateRandomCities = (numCities) => {\n  const cities = [];\n\n  for (let i = 0; i < numCities; i++) {\n    let newCity;\n    let tooClose;\n\n    do {\n      tooClose = false;\n      newCity = {\n        id: i,\n        name: CITY_NAMES[i],\n        x: Math.random() * (100 - 2 * CHART_PADDING) + CHART_PADDING,\n        y: Math.random() * (100 - 2 * CHART_PADDING) + CHART_PADDING,\n      };\n\n      for (let j = 0; j < cities.length; j++) {\n        if (calculateDistance(newCity, cities[j]) < MIN_DISTANCE) {\n          tooClose = true;\n          break;\n        }\n      }\n    } while (tooClose);\n\n    cities.push(newCity);\n  }\n\n  return cities;\n};\n\nconst TravelingSalesmanGame = () => {\n  const [cities, setCities] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [totalDistance, setTotalDistance] = useState(0);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [isRandomMode, setIsRandomMode] = useState(true);\n\n  useEffect(() => {\n    resetGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRandomMode]);\n\n  const handleCityClick = (city) => {\n    if (gameFinished) return;\n\n    if (route.includes(city)) {\n      alert(\"You've already visited this city!\");\n      return;\n    }\n\n    if (route.length === 0) {\n      setStartTime(Date.now());\n    }\n\n    const newRoute = [...route, city];\n    setRoute(newRoute);\n\n    if (newRoute.length > 1) {\n      const distance = calculateDistance(newRoute[newRoute.length - 2], city);\n      setTotalDistance((prevDistance) => prevDistance + distance);\n    }\n\n    if (newRoute.length === cities.length) {\n      const finalDistance = calculateDistance(city, newRoute[0]);\n      setTotalDistance((prevDistance) => prevDistance + finalDistance);\n      setEndTime(Date.now());\n      setGameFinished(true);\n    }\n  };\n\n  const resetGame = () => {\n    setCities(isRandomMode ? generateRandomCities(NUM_CITIES) : FIXED_CITIES);\n    setRoute([]);\n    setTotalDistance(0);\n    setGameFinished(false);\n    setStartTime(null);\n    setEndTime(null);\n  };\n\n  const toggleMode = () => {\n    setIsRandomMode(!isRandomMode);\n  };\n\n  const routeData = route.map((city, index) => ({\n    ...city,\n    index: index + 1,\n  }));\n\n  const renderCityPoint = (props) => {\n    const { cx, cy, payload } = props;\n    const isVisited = route.includes(payload);\n    return (\n      <g>\n        <circle\n          cx={cx}\n          cy={cy}\n          r={isVisited ? 8 : 6}\n          fill={isVisited ? '#10B981' : '#6366F1'}\n          className=\"city-point\"\n          style={{ cursor: 'pointer' }}\n          onClick={() => handleCityClick(payload)}\n        />\n        <text x={cx} y={cy - 10} textAnchor=\"middle\" fontSize={10}>\n          {payload.name}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <style>\n        {`\n          .city-point {\n            transition: r 0.3s ease, fill 0.3s ease;\n          }\n          .city-point:hover {\n            r: 10;\n          }\n        `}\n      </style>\n      <h1 className=\"title\">Traveling Salesman Game</h1>\n      <p>\n        Visit all {NUM_CITIES} cities once and return to the start with the\n        shortest possible route!\n      </p>\n\n      <div>\n        <button onClick={toggleMode} className=\"button\">\n          {isRandomMode ? (\n            <>\n              <Shuffle /> Switch to Fixed Mode\n            </>\n          ) : (\n            <>\n              <PinIcon /> Switch to Random Mode\n            </>\n          )}\n        </button>\n      </div>\n\n      <div className=\"game-container\">\n        <div\n          className=\"chart-container\"\n          style={{ maxWidth: `${CHART_SIZE}px`, height: `${CHART_SIZE}px` }}\n        >\n         <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <ScatterChart\n              margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n            >\n              <XAxis\n                type=\"number\"\n                dataKey=\"x\"\n                domain={[0, 100]}\n                tick={false}\n                axisLine={{ stroke: 'white' }}\n              />\n              <YAxis\n                type=\"number\"\n                dataKey=\"y\"\n                domain={[0, 100]}\n                tick={false}\n                axisLine={{ stroke: 'white' }}\n              />\n              <ZAxis type=\"number\" range={[100, 1000]} />\n              <Scatter\n                name=\"Cities\"\n                data={cities}\n                fill=\"#6366F1\"\n                shape={renderCityPoint}\n              />\n              <Scatter\n                name=\"Route\"\n                data={routeData}\n                fill=\"#10B981\"\n                line={{ stroke: '#10B981', strokeWidth: 2 }}\n                shape=\"star\"\n              />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n\n        <div className=\"stats-container\">\n          <div className=\"game-stats\">\n            <h2>Game Stats</h2>\n            <p>\n              <Route /> Total Distance: {totalDistance.toFixed(2)}\n            </p>\n            <p>\n              <MapPin /> Cities Visited: {route.length} / {NUM_CITIES}\n            </p>\n            {startTime && (\n              <p>\n                <Clock /> Time Elapsed:{' '}\n                {(((endTime || Date.now()) - startTime) / 1000).toFixed(2)}s\n              </p>\n            )}\n          </div>\n\n          <div className=\"current-route\">\n            <h3>Current Route:</h3>\n            <p>{route.map((city) => city.name).join(' → ')}</p>\n          </div>\n        </div>\n      </div>\n\n      {gameFinished && (\n        <div className=\"game-finished\">\n          <h2>You Finished!</h2>\n          <p>Final Distance: {totalDistance.toFixed(2)}</p>\n          <p>\n            Total Time: {((endTime - startTime) / 1000).toFixed(2)} seconds\n          </p>\n          <button onClick={resetGame} className=\"button\">\n            Play Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TravelingSalesmanGame;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}